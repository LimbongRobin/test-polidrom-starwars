{"version":3,"sources":["views/layout/component/task/task.component.jsx"],"names":["Task","props","handleCheck","state","stringData","index","swal","text1","split","length","check","originText","reversText","i","testedData","push","status","setState","handleFieldChange","e","target","value","console","log","this","className","md","sm","xs","type","placeholder","onChange","onClick","map","data","htmlFor","React","Component"],"mappings":"wRAMMA,E,kDACF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAOVC,YAAc,WAAK,IAAD,EACa,EAAKC,MAA1BC,EADQ,EACRA,WADQ,EACIC,MAClB,GAAkB,KAAfD,EACCE,IAAK,OAAQ,6BAA6B,YACzC,CAOD,IALA,IAAMC,EAAQH,EAAWI,MAAM,IAC3BH,EAAQE,EAAME,OAAO,EACrBC,EAAQ,EACRC,EAAW,GACXC,EAAW,GACPC,EAAE,EAAGA,EAAEN,EAAME,OAAQI,IAErBH,EADDH,EAAMM,KAAKN,EAAMF,GACRK,EAEF,EAEVC,GAAY,IAAIJ,EAAMM,GACtBD,GAAY,IAAIL,EAAMF,GACtBA,IAEJ,EAAKF,MAAMW,WAAWC,KAAK,CAACJ,WAAWA,EAAYC,WAAWA,EAAYI,OAAe,IAARN,EAAU,YAAY,kBACvG,EAAKO,SAAS,CACVH,WAAW,EAAKX,MAAMW,eA/BhB,EAmClBI,kBAAoB,SAACC,GACjB,EAAKF,SAAS,CACVb,WAAWe,EAAEC,OAAOC,SAnCxB,EAAKlB,MAAM,CACPC,WAAW,GACXU,WAAW,IAJD,E,qDAyCT,IAAD,OAEJ,OADAQ,QAAQC,IAAIC,KAAKrB,MAAMC,YAEnB,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAMqB,UAAU,aACZ,kBAAC,IAAD,CAAUA,UAAU,YAAYC,IAAE,GAC9B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,GAAG,MACJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKF,UAAU,cAAf,oBAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKG,GAAG,MACJ,2BAAOC,KAAK,OAAOJ,UAAU,eAAeK,YAAY,kBAAkBC,SAAU,SAACZ,GAAD,OAAK,EAAKD,kBAAkBC,OAEpH,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIU,KAAK,SACLG,QAAS,kBAAI,EAAK9B,gBAFtB,qBAMR,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOuB,UAAU,aAAjB,uBAEA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKG,GAAG,MAEJJ,KAAKrB,MAAMW,WAAWmB,KAAI,SAACC,EAAK7B,GAAN,OAC1B,kBAAC,IAAD,KACI,2BAAO8B,QAAQ,IAAID,EAAKlB,QACxB,6BACA,kBAAC,IAAD,CAAKY,GAAG,MAAR,mBAA8BM,EAAKvB,YACnC,kBAAC,IAAD,CAAKiB,GAAG,MAAR,mBAA8BM,EAAKtB,YAC/C,wBAAIa,UAAU,wB,GA9E3BW,IAAMC,WAkGVrC","file":"static/js/8.1d674980.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport \"./task.styles.scss\";\r\nimport { Row, Col, Card, CardBody, Input, Label, Button } from \"reactstrap\";\r\nimport swal from \"sweetalert\";\r\n\r\n\r\nclass Task extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            stringData:\"\",\r\n            testedData:[],\r\n        }        \r\n    }\r\n\r\n    handleCheck = ()=>{\r\n        const{stringData, index} = this.state;\r\n        if(stringData === \"\"){\r\n            swal(\"info\", \"Please Insert Your Text !!\",\"info\")\r\n        }else{\r\n            \r\n            const text1 = stringData.split(\"\");\r\n            let index = text1.length-1;\r\n            let check = 0;\r\n            let originText=\"\";\r\n            let reversText=\"\";\r\n            for(let i=0; i<text1.length; i++){\r\n                if(text1[i]===text1[index]){\r\n                    check = check;\r\n                }else{\r\n                    check=1;\r\n                }\r\n                originText+=\" \"+text1[i];\r\n                reversText+=\" \"+text1[index];\r\n                index--;\r\n            }\r\n            this.state.testedData.push({originText:originText, reversText:reversText, status:check===0?\"Polindrom\":\"Not Polindrom\"})\r\n            this.setState({\r\n                testedData:this.state.testedData\r\n            })\r\n        }\r\n    }\r\n    handleFieldChange = (e)=>{  \r\n        this.setState({\r\n            stringData:e.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        console.log(this.state.stringData);\r\n        return(\r\n            <Fragment>\r\n                <Card className=\"main-card\">\r\n                    <CardBody className=\"card-task\" md>\r\n                        <Row>\r\n                            <Col sm=\"12\">\r\n                                <Row>\r\n                                    <Col className=\"title-task\">\r\n                                        Palindrome Test\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col xs=\"10\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Input Your Test\" onChange={(e)=>this.handleFieldChange(e)}/>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Button\r\n                                            type=\"button\"\r\n                                            onClick={()=>this.handleCheck()}\r\n                                        >Check Your Text</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                <Label className=\"list-text\">Your List Testing </Label>\r\n                               </Row>\r\n                                <Row>          \r\n                                    <Col xs=\"12\">\r\n                                        {\r\n                                        this.state.testedData.map((data,index)=>\r\n                                        <Row>\r\n                                            <label htmlFor=\"\">{data.status}</label>\r\n                                            <br/>\r\n                                            <Col xs=\"12\">Origin Text   : {data.originText}</Col>\r\n                                            <Col xs=\"12\">Reverse Teext : {data.reversText}</Col>\r\n                                <hr className=\"line\"/>\r\n\r\n                                        </Row>\r\n\r\n                                        )   \r\n                                        }\r\n                                    </Col>\r\n\r\n                                </Row>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </CardBody>\r\n                </Card>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Task;"],"sourceRoot":""}